// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bear/bear/bear.proto

package types

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/cosmos/gogoproto/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Bear struct {
	Role       string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Background string `protobuf:"bytes,2,opt,name=background,proto3" json:"background,omitempty"`
	Clothes    string `protobuf:"bytes,3,opt,name=clothes,proto3" json:"clothes,omitempty"`
	Weapon     string `protobuf:"bytes,4,opt,name=weapon,proto3" json:"weapon,omitempty"`
	Creator    string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	Id         uint64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *Bear) Reset()         { *m = Bear{} }
func (m *Bear) String() string { return proto.CompactTextString(m) }
func (*Bear) ProtoMessage()    {}
func (*Bear) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f1fb90a4d3904f8, []int{0}
}
func (m *Bear) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Bear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Bear.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Bear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bear.Merge(m, src)
}
func (m *Bear) XXX_Size() int {
	return m.Size()
}
func (m *Bear) XXX_DiscardUnknown() {
	xxx_messageInfo_Bear.DiscardUnknown(m)
}

var xxx_messageInfo_Bear proto.InternalMessageInfo

func (m *Bear) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Bear) GetBackground() string {
	if m != nil {
		return m.Background
	}
	return ""
}

func (m *Bear) GetClothes() string {
	if m != nil {
		return m.Clothes
	}
	return ""
}

func (m *Bear) GetWeapon() string {
	if m != nil {
		return m.Weapon
	}
	return ""
}

func (m *Bear) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Bear) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Bear)(nil), "bear.bear.Bear")
}

func init() { proto.RegisterFile("bear/bear/bear.proto", fileDescriptor_4f1fb90a4d3904f8) }

var fileDescriptor_4f1fb90a4d3904f8 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0x4a, 0x4d, 0x2c,
	0xd2, 0x87, 0x13, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x9c, 0x60, 0x36, 0x88, 0x50, 0x9a,
	0xc6, 0xc8, 0xc5, 0xe2, 0x94, 0x9a, 0x58, 0x24, 0x24, 0xc4, 0xc5, 0x52, 0x94, 0x9f, 0x93, 0x2a,
	0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x0b, 0xc9, 0x71, 0x71, 0x25, 0x25, 0x26, 0x67,
	0xa7, 0x17, 0xe5, 0x97, 0xe6, 0xa5, 0x48, 0x30, 0x81, 0x65, 0x90, 0x44, 0x84, 0x24, 0xb8, 0xd8,
	0x93, 0x73, 0xf2, 0x4b, 0x32, 0x52, 0x8b, 0x25, 0x98, 0xc1, 0x92, 0x30, 0xae, 0x90, 0x18, 0x17,
	0x5b, 0x79, 0x6a, 0x62, 0x41, 0x7e, 0x9e, 0x04, 0x0b, 0x58, 0x02, 0xca, 0x03, 0xeb, 0x28, 0x4a,
	0x4d, 0x2c, 0xc9, 0x2f, 0x92, 0x60, 0x85, 0xea, 0x80, 0x70, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53,
	0x24, 0xd8, 0x14, 0x18, 0x35, 0x58, 0x82, 0x98, 0x32, 0x53, 0x9c, 0xb4, 0x4f, 0x3c, 0x92, 0x63,
	0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96,
	0x63, 0xb8, 0xf1, 0x58, 0x8e, 0x21, 0x4a, 0x10, 0xec, 0x9d, 0x0a, 0x88, 0xaf, 0x4a, 0x2a, 0x0b,
	0x52, 0x8b, 0x93, 0xd8, 0xc0, 0xfe, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xdf, 0xf5,
	0x5b, 0xef, 0x00, 0x00, 0x00,
}

func (m *Bear) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Bear) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Bear) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintBear(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintBear(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Weapon) > 0 {
		i -= len(m.Weapon)
		copy(dAtA[i:], m.Weapon)
		i = encodeVarintBear(dAtA, i, uint64(len(m.Weapon)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Clothes) > 0 {
		i -= len(m.Clothes)
		copy(dAtA[i:], m.Clothes)
		i = encodeVarintBear(dAtA, i, uint64(len(m.Clothes)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Background) > 0 {
		i -= len(m.Background)
		copy(dAtA[i:], m.Background)
		i = encodeVarintBear(dAtA, i, uint64(len(m.Background)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintBear(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBear(dAtA []byte, offset int, v uint64) int {
	offset -= sovBear(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Bear) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovBear(uint64(l))
	}
	l = len(m.Background)
	if l > 0 {
		n += 1 + l + sovBear(uint64(l))
	}
	l = len(m.Clothes)
	if l > 0 {
		n += 1 + l + sovBear(uint64(l))
	}
	l = len(m.Weapon)
	if l > 0 {
		n += 1 + l + sovBear(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovBear(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovBear(uint64(m.Id))
	}
	return n
}

func sovBear(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBear(x uint64) (n int) {
	return sovBear(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Bear) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBear
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Bear: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Bear: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBear
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBear
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBear
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBear
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBear
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBear
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Background = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clothes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBear
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBear
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBear
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Clothes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weapon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBear
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBear
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBear
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Weapon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBear
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBear
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBear
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBear
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBear(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBear
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBear(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBear
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBear
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBear
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBear
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBear
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBear
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBear        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBear          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBear = fmt.Errorf("proto: unexpected end of group")
)
